name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Make Gradle wrapper executable
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      # 4. Build with Gradle (skip tests)
      - name: Build with Gradle (skip tests)
        run: ./gradlew build -x test

      # 5. Upload JAR file as artifact
      - name: Upload JAR file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-application
          path: build/libs/Maching-0.0.1-SNAPSHOT.jar

      # 6. Get GitHub Actions IP
      - name: Get GitHub Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      # 7. Set environment variables
      - name: Set environment variables
        run: |
          echo "AWS_DEFAULT_REGION=ap-northeast-2" >> $GITHUB_ENV
          echo "AWS_SG_ID=sg-0a23132ecef539746" >> $GITHUB_ENV

      # 8. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 9. Add GitHub Actions IP to Security Group
      - name: Add GitHub Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ env.AWS_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 10. Deploy to AWS EC2 using SCP
      - name: Deploy to AWS EC2 using SCP
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa
          scp -i /tmp/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build/libs/Maching-0.0.1-SNAPSHOT.jar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/maple_matching/

      # 11. Restart application on EC2
      - name: Restart application on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            export $(cat /home/ubuntu/maple_matching/.env | xargs)  # .env 파일을 환경 변수로 로드
            pid=$(ps -ef | grep Maching-0.0.1-SNAPSHOT.jar | grep -v grep | awk '{print $2}')
            if [ -n "$pid" ]; then
              kill -9 $pid
            fi
            nohup java -Duser.timezone=Asia/Seoul -jar /home/ubuntu/maple_matching/Maching-0.0.1-SNAPSHOT.jar > /home/ubuntu/maple_matching/app.log 2>&1 &
          EOF

      # 12. Remove GitHub Actions IP from Security Group
      - name: Remove GitHub Actions IP from Security Group
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ env.AWS_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
